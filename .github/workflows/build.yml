name: Build & Deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
#  lint:
#    name: GO lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Run linting
#        uses: golangci/golangci-lint-action@v2
#
#  cypress:
#    name: Cypress
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Run cypress
#        run: |
#          docker-compose -f docker/docker-compose.ci.yml run cypress
  build:
    name: Build and deploy app to heroku
    runs-on: ubuntu-latest
#    needs: [ 'lint', 'cypress' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and push Docker to Heroku
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          DOCKERFILE: "./docker/gitline/Dockerfile"
          DOCKER_OPTIONS: "--no-cache -f"
        run: |
          echo ${HEROKU_API_KEY} | docker login \
            --username=${HEROKU_EMAIL} \
            registry.heroku.com \
            --password-stdin
          docker build ${DOCKER_OPTIONS} ${DOCKERFILE} . \
            --tag registry.heroku.com/${HEROKU_APP_NAME}/web .
          heroku container:push web --app ${HEROKU_APP_NAME}
          heroku container:release web --app ${HEROKU_APP_NAME}
#
#  build:
#    name: "Build & Push Containers"
#    runs-on: ubuntu-latest
#    needs: ['lint', 'cypress']
#    steps:
#      - uses: actions/checkout@v2
#      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
#        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
#        with:
#          # Below you must provide variables for your Heroku app.
#
#          # The email address associated with your Heroku account.
#          # If you don't want to use repository secrets (which is recommended) you can do:
#          # email: my.email@example.com
#          email: ${{ secrets.HEROKU_EMAIL }}
#
#          # Heroku API key associated with provided user's email.
#          # Api Key is available under your Heroku account settings.
#          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
#
#          # Name of the heroku application to which the build is to be sent.
#          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
#
#          # (Optional, default: "./")
#          # Dockerfile directory.
#          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
#          dockerfile_directory: ./docker/gitline
#
#          # (Optional, default: "Dockerfile")
#          # Dockerfile name.
#          dockerfile_name: Dockerfile
#
#          # (Optional, default: "")
#          # Additional options of docker build command.
#          docker_options: "--no-cache"
#
#          # (Optional, default: "web")
#          # Select the process type for which you want the docker container to be uploaded.
#          # By default, this argument is set to "web".
#          # For more information look at https://devcenter.heroku.com/articles/process-model
#          process_type: web

#name: Build Shiny Docker Image and Deploy to Heroku
#
#on:
#  push:
#    branches:
#      - main

#jobs:
