name: Build & Deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    name: Test Gitline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - uses: unfor19/install-aws-cli-action@v1

      - name: Resolve GO mod cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Resolve GO Dependencies
        run: |
          go mod download
      - name: Setup gotestsum
        uses: autero1/action-gotestsum@v1.0.0
        with:
          gotestsum_version: 1.6.4

      - run: mkdir -p /tmp/test-results

      - name: Run Tests
        run: |
          docker-compose -f docker/docker-compose.ci.yml up -d --build
          gotestsum --junitfile /tmp/test-results/unit-tests.xml -- ./... -coverprofile=/tmp/test-coverage.txt
  lint:
    name: GO lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run linting
        uses: golangci/golangci-lint-action@v2
  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run cypress
        run: |
          docker-compose -f docker/docker-compose.ci.yml run cypress
  deploy:
    name: Build app and deploy to heroku
    runs-on: ubuntu-latest
    needs: ['test', 'lint', 'cypress']
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker Container
        run: |
          docker build --no-cache --tag registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web -f docker/gitline/Dockerfile .
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          echo ${HEROKU_API_KEY} | docker login --username=${HEROKU_EMAIL} --password-stdin registry.heroku.com
          docker push registry.heroku.com/${HEROKU_APP_NAME}/web
          heroku container:release web --app ${HEROKU_APP_NAME}