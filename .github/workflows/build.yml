name: Build & Deploy

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
#  lint:
#    name: GO lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Run linting
#        uses: golangci/golangci-lint-action@v2
#
#  cypress:
#    name: Cypress
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Run cypress
#        run: |
#          docker-compose -f docker/docker-compose.ci.yml run cypress
  build:
    name: Build and deploy app to heroku
    runs-on: ubuntu-latest
#    needs: [ 'lint', 'cypress' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker Container
        run: |
          docker build --no-cache --tag registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web -f docker/gitline/Dockerfile .
      - name: Deploy to Heroku
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          DOCKERFILE: "docker/gitline/Dockerfile"
          DOCKER_OPTIONS: "--no-cache"
        run: |
          echo ${HEROKU_API_KEY} | docker login \
            --username=${HEROKU_EMAIL} \
            registry.heroku.com \
            --password-stdin
          docker build \
            -f ${DOCKERFILE} \
            ${DOCKER_OPTIONS} \
            --tag registry.heroku.com/${HEROKU_APP_NAME}/web .
          heroku container:push web --app ${HEROKU_APP_NAME}
          heroku container:release web --app ${HEROKU_APP_NAME}
